on:
#  push:
#    # Sequence of patterns matched against refs/tags
#    tags:
#      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  release:
    types: [prereleased]

name: Upload Release Asset

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
    - name: dump label event
      run: cat $GITHUB_EVENT_PATH

    - name: dump envs
      run: export

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build project # This would actually build your project, using zip for an example artifact
      run: |
        zip --junk-paths my-artifact-${{github.event.release.tag_name}}.zip README.md
#    - name: Create Release
#      id: create_release
#      uses: actions/create-release@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        tag_name: ${{ github.ref }}
#        release_name: Release ${{ github.ref }}
#        draft: false
#        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./my-artifact-${{github.event.release.tag_name}}.zip
        asset_name: my-artifact-${{github.event.release.tag_name}}.zip
        asset_content_type: application/zip

    - name: Upload Readme
      id: upload-readme
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./README.md
        asset_name: README.md
        asset_content_type: text/plain

    - name: Publish release
      uses: actions/github-script@0.3.0
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          await github.repos.updateRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            release_id: context.payload.release.id,
            prerelease: false
          })
